# Generated by Django 5.2.3 on 2025-07-01 11:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='اسم الشركة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
            ],
            options={
                'verbose_name': 'شركة',
                'verbose_name_plural': '1. الشركات',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.company', verbose_name='الشركة')),
            ],
            options={
                'verbose_name': 'مستخدم',
                'verbose_name_plural': '5. المستخدمون',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='الدولة')),
                ('classification', models.CharField(blank=True, choices=[('factory', 'مصنع'), ('store', 'متجر'), ('company', 'شركة خدمات')], max_length=50, null=True, verbose_name='تصنيف الشركة')),
                ('language', models.CharField(default='ar', max_length=10, verbose_name='اللغة')),
                ('has_completed_profile', models.BooleanField(default=False, verbose_name='أكمل ملفه')),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.company', verbose_name='الشركة')),
            ],
            options={
                'verbose_name': 'ملف شركة',
                'verbose_name_plural': '2. ملفات الشركات',
            },
        ),
        migrations.CreateModel(
            name='IPRegistrationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(unique=True, verbose_name='عنوان IP')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='وقت التسجيل')),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.company', verbose_name='الشركة المسجلة')),
            ],
            options={
                'verbose_name': 'سجل تسجيل IP',
                'verbose_name_plural': 'سجلات تسجيل IP',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='اسم الصنف')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='كود الصنف')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='سعر البيع')),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='سعر التكلفة')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='الكمية الحالية')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.company', verbose_name='الشركة')),
            ],
            options={
                'verbose_name': 'صنف',
                'verbose_name_plural': '6. الأصناف',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(default=uuid.uuid4, editable=False, max_length=100, unique=True, verbose_name='السيريال نمبر')),
                ('is_active', models.BooleanField(default=False, verbose_name='فعّال')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='تاريخ البداية')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='تاريخ النهاية')),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.company', verbose_name='الشركة')),
            ],
            options={
                'verbose_name': 'اشتراك',
                'verbose_name_plural': '3. الاشتراكات',
            },
        ),
        migrations.CreateModel(
            name='SystemPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='اسم الصفحة المعروض')),
                ('url_name', models.CharField(max_length=100, unique=True, verbose_name='اسم الرابط (من urls.py)')),
                ('icon_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='أيقونة Lucide')),
                ('category', models.CharField(default='General', max_length=100, verbose_name='الفئة')),
                ('allowed_groups', models.ManyToManyField(blank=True, related_name='system_pages', to='auth.group', verbose_name='المجموعات المسموح لها بالوصول')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='accounts.systempage', verbose_name='يتبع صفحة')),
            ],
            options={
                'verbose_name': 'صفحة نظام',
                'verbose_name_plural': '4. صفحات النظام',
                'ordering': ['parent__id', 'id'],
            },
        ),
    ]
